from plptest import *

import os


def append_test(tests, test, level=0, tags=[]):
    active_tags = os.environ.get('PLPTEST_TESTSET_TAGS').split(':') if os.environ.get('PLPTEST_TESTSET_TAGS') is not None else []
    active_level = int(os.environ.get('PLPTEST_TESTSET_LEVEL')) if os.environ.get('PLPTEST_TESTSET_LEVEL') is not None else 50
    if level <= active_level and (len(active_tags) == 0 or len(tags) == 0 or len([x for x in active_tags if x in tags]) != 0):
        tests.append(test)

testsets = []

if os.environ.get('TARGET_CHIP') == 'GAP9_V2':
    append_test(testsets, 'tests/pmsis_tests/testset.cfg'   , level=0 )
    append_test(testsets, 'tests/bsp_tests/testset.cfg'     , level=20 )
    append_test(testsets, 'tests/sfu_tests/testset.cfg'     , level=10 )

if os.environ.get('TARGET_CHIP') != 'GAP9_V2' or os.environ.get('PMSIS_PLATFORM') != 'rtl':
    append_test(testsets, 'examples/testset.cfg'            , level=0 )
    append_test(testsets, 'applications/testset.cfg'        , level=0 )
    append_test(testsets, 'rtos/openmp/tests/testset.cfg'   , level=0 )

    if os.environ.get('TARGET_CHIP') == 'GAP9_V2' and os.environ.get('PMSIS_OS') == 'pulpos':
        append_test(testsets, 'tests/riscv_tests/testset.cfg'            , level=0 )
        append_test(testsets, 'tests/pulp_tests/testset.cfg'             , level=0 )
        append_test(testsets, 'tests/ml_tests/testset.cfg'               , level=0 )

if os.environ.get('TARGET_CHIP') != 'GAP9_V2':
    append_test(testsets, 'tests/testset.cfg'               , level=0 )

quick = Testset(
    name  = 'sdk',
    files = testsets
)

TestConfig = c = {}

c['testsets'] = [ quick ]
