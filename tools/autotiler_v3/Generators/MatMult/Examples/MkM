BUILD_DIR ?= $(CURDIR)/BUILD_MODEL

#Code code of test runner and kernels generated code
SRCS = TestMat.c $(BUILD_DIR)/Kernels.c $(TILER_GENERATOR_PATH)/MatMult/MatMultBasicKernels.c

# C code of the Model
SRCSG = $(TILER_GENERATOR_PATH)/MatMult/MatMultGenerator.c GenTestMat.c


# Exec Name for the runner
TARGET = $(BUILD_DIR)/Test
# Exec Name for the generator
TARGETG = $(BUILD_DIR)/MatMultGen


# Everything bellow is not application specific
CC= gcc     
INCL = -I$(AT_HOME)/Emulation -I$(AT_HOME)/CNN_Libraries -I$(AT_HOME)/CNN_AutoTest -I$(AT_HOME)/CNN_Generators -I$(AT_HOME)/Autotiler -I$(BUILD_DIR) -I$(TILER_GENERATOR_PATH)/MatMult/

CFLAGS= -std=c99 -D__EMUL__ -g
LFLAGS=-lSDL2 -lSDL2_ttf

LIBS = $(TILER_LIB)
OBJS = $(SRCS:%.c=$(BUILD_DIR)/%.o)

test: $(TARGET)

run:$(TARGET)
	$(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $(INCL) -o $(TARGET) $(OBJS) $(LIBS) $(LFLAGS)

$(BUILD_DIR)/%.o: %.c
	@mkdir -p `dirname $@`
	$(CC) $(DFLAGS) $(CFLAGS) $(INCL) -c $<  -o $@

$(BUILD_DIR)/%.o: $(BUILD_DIR)/%.c
	@mkdir -p `dirname $@`
	$(CC) $(DFLAGS) $(CFLAGS) $(INCL) -c $<  -o $@

clean:
	$(RM) $(TARGET) $(BUILD_DIR)/*.o

INCLG = -I$(AT_HOME)/Emulation -I$(AT_HOME)/CNN_Libraries -I$(AT_HOME)/CNN_Generators -I$(TILER_GENERATOR_PATH)/MatMult/


CFLAGSG= -std=c99 -D__EMUL__ -g
LFLAGSG=-lSDL2 -lSDL2_ttf

# GENFLAGS = --debug=CNNIO
# GENFLAGSDEB="--debug=CNNIO"
# GENFLAGSCHECK="--debug=CNN"

LIBSG = $(TILER_LIB)

# SRCSG += $(AT_HOME)/CNN_Generators/CNN_Generators.c

OBJSG = $(SRCSG:%.c=$(BUILD_DIR)/%.o)

$(TARGETG): $(OBJSG)
	$(CC) $(CFLAGSG) $(INCLG) -o $(TARGETG) $(OBJSG) $(LIBSG) $(LFLAGSG)

build: $(TARGETG)
	cd $(BUILD_DIR) && $(TARGETG) $(GENFLAGS)

buildcheck: $(TARGETG)
	cd $(BUILD_DIR) && $(TARGETG) $(GENFLAGSCHECK)

builddeb: $(TARGETG)
	cd $(BUILD_DIR) && $(TARGETG) $(GENFLAGSDEB)

clean_model:
	$(RM) -r $(BUILD_DIR)
