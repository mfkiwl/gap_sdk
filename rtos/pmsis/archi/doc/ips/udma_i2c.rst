.. 
   Input file: fe/ips/udma/udma_i2c/README.md

Register map
^^^^^^^^^^^^


Overview
""""""""


Refer to :ref:`GAP9 address map<REF_MEMORY_MAP_DETAIL>` for the base address to be used.

.. table:: 
    :align: center
    :widths: 40 12 12 90

    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |                                Name                                 |Offset|Width|          Description           |
    +=====================================================================+======+=====+================================+
    |:ref:`FOLL_UDMA_RX_DEST_REG_IDX<udma_i2c__FOLL_UDMA_RX_DEST_REG_IDX>`|0x0   |   32|I2c follower RX uDMA channel    |
    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |:ref:`FOLL_UDMA_TX_DEST_REG_IDX<udma_i2c__FOLL_UDMA_TX_DEST_REG_IDX>`|0x4   |   32|I2c follower TX uDMA channel    |
    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |:ref:`UDMA_CMD_DEST_REG_IDX<udma_i2c__UDMA_CMD_DEST_REG_IDX>`        |0x8   |   32|Command TX uDMA channel         |
    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |:ref:`LEAD_UDMA_RX_DEST_REG_IDX<udma_i2c__LEAD_UDMA_RX_DEST_REG_IDX>`|0xC   |   32|I2c leader RX uDMA channel      |
    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |:ref:`LEAD_UDMA_TX_DEST_REG_IDX<udma_i2c__LEAD_UDMA_TX_DEST_REG_IDX>`|0x10  |   32|I2c leader TX uDMA channel      |
    +---------------------------------------------------------------------+------+-----+--------------------------------+
    |:ref:`STATUS_REG_IDX<udma_i2c__STATUS_REG_IDX>`                      |0x14  |   32|Incoming event flag / emit event|
    +---------------------------------------------------------------------+------+-----+--------------------------------+

.. _udma_i2c__FOLL_UDMA_RX_DEST_REG_IDX:

FOLL_UDMA_RX_DEST_REG_IDX
"""""""""""""""""""""""""

I2c follower RX uDMA channel

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+--------------+-----+-------------------------------+
    |Bit #|R/W|     Name     |Reset|          Description          |
    +=====+===+==============+=====+===============================+
    |7:0  |R/W|UDMA_STREAM_ID|0xFF |UDMA channel ID (0xFF=disabled)|
    +-----+---+--------------+-----+-------------------------------+

.. _udma_i2c__FOLL_UDMA_TX_DEST_REG_IDX:

FOLL_UDMA_TX_DEST_REG_IDX
"""""""""""""""""""""""""

I2c follower TX uDMA channel

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+--------------+-----+-------------------------------+
    |Bit #|R/W|     Name     |Reset|          Description          |
    +=====+===+==============+=====+===============================+
    |7:0  |R/W|UDMA_STREAM_ID|0xFF |UDMA channel ID (0xFF=disabled)|
    +-----+---+--------------+-----+-------------------------------+

.. _udma_i2c__UDMA_CMD_DEST_REG_IDX:

UDMA_CMD_DEST_REG_IDX
"""""""""""""""""""""

Command TX uDMA channel

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+--------------+-----+-------------------------------+
    |Bit #|R/W|     Name     |Reset|          Description          |
    +=====+===+==============+=====+===============================+
    |7:0  |R/W|UDMA_STREAM_ID|0xFF |UDMA channel ID (0xFF=disabled)|
    +-----+---+--------------+-----+-------------------------------+

.. _udma_i2c__LEAD_UDMA_RX_DEST_REG_IDX:

LEAD_UDMA_RX_DEST_REG_IDX
"""""""""""""""""""""""""

I2c leader RX uDMA channel

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+--------------+-----+-------------------------------+
    |Bit #|R/W|     Name     |Reset|          Description          |
    +=====+===+==============+=====+===============================+
    |7:0  |R/W|UDMA_STREAM_ID|0xFF |UDMA channel ID (0xFF=disabled)|
    +-----+---+--------------+-----+-------------------------------+

.. _udma_i2c__LEAD_UDMA_TX_DEST_REG_IDX:

LEAD_UDMA_TX_DEST_REG_IDX
"""""""""""""""""""""""""

I2c leader TX uDMA channel

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+--------------+-----+-------------------------------+
    |Bit #|R/W|     Name     |Reset|          Description          |
    +=====+===+==============+=====+===============================+
    |7:0  |R/W|UDMA_STREAM_ID|0xFF |UDMA channel ID (0xFF=disabled)|
    +-----+---+--------------+-----+-------------------------------+

.. _udma_i2c__STATUS_REG_IDX:

STATUS_REG_IDX
""""""""""""""

Incoming event flag / emit event

.. table:: 
    :align: center
    :widths: 13 12 45 24 85

    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |Bit #|R/W|                   Name                   |Reset|                               Description                               |
    +=====+===+==========================================+=====+=========================================================================+
    |    0|R/W|STATUS_FOLL_SOF_RCV_EVENT_I_IDX           |    0|Follower is addressed by a read. Write 1 to clear.                       |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |    1|R/W|STATUS_FOLL_SOF_SND_EVENT_I_IDX           |    0|Follower is addressed by a write. Write 1 to clear.                      |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |    2|R/W|STATUS_FOLL_EOF_RCV_EVENT_I_IDX           |    0|Follower is addressed by a read which closes transfer. Write 1 to clear. |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |    3|R/W|STATUS_FOLL_EOF_SND_EVENT_I_IDX           |    0|Follower is addressed by a write which closes transfer. Write 1 to clear.|
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |    4|R/W|STATUS_FOLL_ERROR_ARLO_EVENT_I_IDX        |    0|Follower is addressed and received an arbitration loss. Write 1 to clear.|
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |    5|R/W|STATUS_FOLL_ERROR_FRAMING_EVENT_I_IDX     |    0|Follower is addressed and noticed incorrect framing. Write 1 to clear.   |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   14|W  |STATUS_FOLL_UNLOCK_EVENT_O_IDX            |    0|Write 1 to unlock follower TX RX channels after a SOF/EOF/ERROR event    |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   15|W  |STATUS_FOLL_PURGE_EVENT_O_IDX             |    0|Write 1 to purge TX RX channels FIFOs of any remaining data              |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   16|R/W|STATUS_LEAD_ERROR_NACK_EVENT_I_IDX        |    0|Leader encountered an unexpected NACK. Write 1 to clear.                 |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   17|R/W|STATUS_LEAD_ERROR_ARLO_EVENT_I_IDX        |    0|Leader encountered an arbitration loss. Write 1 to clear.                |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   18|R/W|STATUS_LEAD_ERROR_FRAMING_EVENT_I_IDX     |    0|Leader encountered an incorrect framing. Write 1 to clear.               |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   19|R/W|STATUS_LEAD_COMMAND_EVENT_I_IDX           |    0|Leader emitted a command event. Does not lock. Write 1 to clear.         |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   22|W  |STATUS_LEAD_UNLOCK_EVENT_O_IDX            |    0|Write 1 to unlock leader TX RX channels after a SOF/EOF/ERROR event      |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   23|W  |STATUS_LEAD_PURGE_EVENT_O_IDX             |    0|Write 1 to purge cmd TX RX leader FIFOs of any remaining data            |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   24|W  |STATUS_I2C_SOFT_RESET_EVENT_O_IDX         |    0|Write 1 to soft reset i2c, if it is deadlocked due to bus error          |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+
    |   25|W  |STATUS_I2C_PRESCALER_SET_DIV10_EVENT_O_IDX|    0|Write 1 to set prescaler to divide by 10 instead of 100 by default       |
    +-----+---+------------------------------------------+-----+-------------------------------------------------------------------------+

I2C micro-code
^^^^^^^^^^^^^^

.. table:: 
    :align: center
    :widths: 45 15 15 80

    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |                                  Command name                                   |Width|Command code|                                                           Description                                                            |
    +=================================================================================+=====+============+==================================================================================================================================+
    |:ref:`CMD_MISC_NOP<I2C micro-code__CMD_MISC_NOP>`                                |   32|0x00        |Does nothing                                                                                                                      |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_MISC_WAIT<I2C micro-code__CMD_MISC_WAIT>`                              |   32|0x01        |Wait one i2c clock cycle (repeated if REPEAT_CNT > 1)                                                                             |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_MISC_REPEAT<I2C micro-code__CMD_MISC_REPEAT>`                          |   32|0x02        |Reload the 16-bit repeat downcounter                                                                                              |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_MISC_WAIT_I2C_PERIOD_END<I2C micro-code__CMD_MISC_WAIT_I2C_PERIOD_END>`|   32|0x03        |Wait one i2c scl period cycle -- see CMD_TIMING (repeated if REPEAT_CNT > 1)                                                      |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_TIMING<I2C micro-code__CMD_TIMING>`                                    |   32|0x10        |Setup i2c_clock period and i2c scl low/high delays                                                                                |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_FOLL_ADDR<I2C micro-code__CMD_FOLL_ADDR>`                              |   32|0x20        |Setup follower adressing & events                                                                                                 |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_START<I2C micro-code__CMD_LEAD_START>`                            |   32|0x30        |Send a (re)start condition                                                                                                        |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_SEND<I2C micro-code__CMD_LEAD_SEND>`                              |   32|0x31        |Send a byte from TX stream, check ACK (repeated if REPEAT_CNT > 1)                                                                |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_SEND_IMM<I2C micro-code__CMD_LEAD_SEND_IMM>`                      |   32|0x32        |Send a byte from the command, check ACK                                                                                           |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_SEND_IMM_ADDR<I2C micro-code__CMD_LEAD_SEND_IMM_ADDR>`            |   32|0x37        |Send an addr7 or addr10, check ACK                                                                                                |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_RECV<I2C micro-code__CMD_LEAD_RECV>`                              |   32|0x33        |Receives a byte that is not the last byte, send ACK (repeated if REPEAT_CNT > 1)                                                  |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_RECV_LAST<I2C micro-code__CMD_LEAD_RECV_LAST>`                    |   32|0x34        |Receives a byte that is the last byte, send NACK (repeated if REPEAT_CNT > 1, in this case the first REPEAT_CNT-1 bytes are ACKed)|
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_LEAD_STOP<I2C micro-code__CMD_LEAD_STOP>`                              |   32|0x36        |Generates a stop condition                                                                                                        |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_EVENT_RECV<I2C micro-code__CMD_EVENT_RECV>`                            |   32|0x40        |Wait for an external event of a given index (repeated if REPEAT_CNT > 1)                                                          |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_EVENT_SEND<I2C micro-code__CMD_EVENT_SEND>`                            |   32|0x41        |Triggers an internal 'command event'                                                                                              |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_UDMA_TX_CHAN_CFG<I2C micro-code__CMD_UDMA_TX_CHAN_CFG>`                |   32|0x50        |Send a configuration command to uDMA TX channel (the register value is given in the following word)                               |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+
    |:ref:`CMD_UDMA_RX_CHAN_CFG<I2C micro-code__CMD_UDMA_RX_CHAN_CFG>`                |   32|0x51        |Send a configuration command to uDMA RX channel (the register value is given in the following word)                               |
    +---------------------------------------------------------------------------------+-----+------------+----------------------------------------------------------------------------------------------------------------------------------+

.. _I2C micro-code__CMD_MISC_NOP:

CMD_MISC_NOP
""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+------------------------------------+
    |Bit #| Name  |            Description             |
    +=====+=======+====================================+
    |31:24|I2C_CMD|Command code -- here “MISC_NOP”=0x00|
    +-----+-------+------------------------------------+

.. _I2C micro-code__CMD_MISC_WAIT:

CMD_MISC_WAIT
"""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+-------------------------------------+
    |Bit #| Name  |             Description             |
    +=====+=======+=====================================+
    |31:24|I2C_CMD|Command code -- here “MISC_WAIT”=0x01|
    +-----+-------+-------------------------------------+

.. _I2C micro-code__CMD_MISC_REPEAT:

CMD_MISC_REPEAT
"""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+--------------+-------------------------------------------------------------------------------------------------------------------------------+
    |Bit #|     Name     |                                                          Description                                                          |
    +=====+==============+===============================================================================================================================+
    |15:0 |SET_REPEAT_CNT|Set REPEAT_CNT. Commands that can be repeated will be repeated SET_REPEAT_CNT times, after which REPEAT_CNT will be equal to 1.|
    +-----+--------------+-------------------------------------------------------------------------------------------------------------------------------+
    |31:24|I2C_CMD       |Command code -- here “MISC_REPEAT”=0x02                                                                                        |
    +-----+--------------+-------------------------------------------------------------------------------------------------------------------------------+

.. _I2C micro-code__CMD_MISC_WAIT_I2C_PERIOD_END:

CMD_MISC_WAIT_I2C_PERIOD_END
""""""""""""""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+----------------------------------------------------+
    |Bit #| Name  |                    Description                     |
    +=====+=======+====================================================+
    |31:24|I2C_CMD|Command code -- here “MISC_WAIT_I2C_PERIOD_END”=0x03|
    +-----+-------+----------------------------------------------------+

.. _I2C micro-code__CMD_TIMING:

CMD_TIMING
""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+-------------------------------------------------------------------------------------------------------------------------+
    |Bit #| Name  |                                                       Description                                                       |
    +=====+=======+=========================================================================================================================+
    |3:0  |DL     |Setup scl low duration: T_low=i2c_period :math:`\times` (DL + 4)                                                         |
    +-----+-------+-------------------------------------------------------------------------------------------------------------------------+
    |7:4  |DH     |Setup scl high duration: T_high=i2c_period :math:`\times` (DL + 4)                                                       |
    +-----+-------+-------------------------------------------------------------------------------------------------------------------------+
    |11:8 |DP     |Division factor between PERIPH clock and i2c clock, minus 1. Must be :math:`\geq` 1. DP=99 at reset (i.e. divide by 100).|
    +-----+-------+-------------------------------------------------------------------------------------------------------------------------+
    |31:24|I2C_CMD|Command code -- here “TIMING”=0x10                                                                                       |
    +-----+-------+-------------------------------------------------------------------------------------------------------------------------+

.. _I2C micro-code__CMD_FOLL_ADDR:

CMD_FOLL_ADDR
"""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-----------------+------------------------------------------------------------------------+
    |Bit #|      Name       |                              Description                               |
    +=====+=================+========================================================================+
    |8:0  |ADDR_MATCH       |Address of the follower                                                 |
    +-----+-----------------+------------------------------------------------------------------------+
    |14:10|ADDR_MASK        |Address mask (set to b11111 to match a single address)                  |
    +-----+-----------------+------------------------------------------------------------------------+
    |15   |ENABLE_7BIT_ADDR |Set to 1 to enable 7-bit address matching                               |
    +-----+-----------------+------------------------------------------------------------------------+
    |16   |ENABLE_10BIT_ADDR|Set to 1 to enable 10-bit address matching                              |
    +-----+-----------------+------------------------------------------------------------------------+
    |17   |ENABLE_SOF_RCV   |Set to 1 to enable SOF event when receiving                             |
    +-----+-----------------+------------------------------------------------------------------------+
    |18   |ENABLE_EOF_RCV   |Set to 1 to enable SOF event when receiving                             |
    +-----+-----------------+------------------------------------------------------------------------+
    |19   |ENABLE_SOF_SND   |Set to 1 to enable EOF event when sending                               |
    +-----+-----------------+------------------------------------------------------------------------+
    |20   |ENABLE_EOF_SND   |Set to 1 to enable EOF event when sending                               |
    +-----+-----------------+------------------------------------------------------------------------+
    |21   |ADDR_PUSH_ENABLE |Enable incoming addressing mode from leader to be pushed into RX channel|
    +-----+-----------------+------------------------------------------------------------------------+
    |23:22|ADDR_SLOT_IDX    |Address match slot to be configured                                     |
    +-----+-----------------+------------------------------------------------------------------------+
    |31:24|I2C_CMD          |Command code -- here “FOLL_ADDR”=0x20                                   |
    +-----+-----------------+------------------------------------------------------------------------+

.. _I2C micro-code__CMD_LEAD_START:

CMD_LEAD_START
""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+--------------------------------------+
    |Bit #| Name  |             Description              |
    +=====+=======+======================================+
    |31:24|I2C_CMD|Command code -- here “LEAD_START”=0x30|
    +-----+-------+--------------------------------------+

.. _I2C micro-code__CMD_LEAD_SEND:

CMD_LEAD_SEND
"""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+------------------+----------------------------------------------------------------+
    |Bit #|       Name       |                          Description                           |
    +=====+==================+================================================================+
    |   22|TWEAK_IGNORE_NACK |If 1, ignore NACK error: it will not trigger an event nor a lock|
    +-----+------------------+----------------------------------------------------------------+
    |   23|TWEAK_STOP_ON_NACK|If 1, on NACK automatically send a stop                         |
    +-----+------------------+----------------------------------------------------------------+
    |31:24|I2C_CMD           |Command code -- here “LEAD_SEND”=0x31                           |
    +-----+------------------+----------------------------------------------------------------+

.. _I2C micro-code__CMD_LEAD_SEND_IMM:

CMD_LEAD_SEND_IMM
"""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+------------------+----------------------------------------------------------------+
    |Bit #|       Name       |                          Description                           |
    +=====+==================+================================================================+
    |7:0  |DATA              |Data to be sent                                                 |
    +-----+------------------+----------------------------------------------------------------+
    |22   |TWEAK_IGNORE_NACK |If 1, ignore NACK error: it will not trigger an event nor a lock|
    +-----+------------------+----------------------------------------------------------------+
    |23   |TWEAK_STOP_ON_NACK|If 1, on NACK automatically send a stop                         |
    +-----+------------------+----------------------------------------------------------------+
    |31:24|I2C_CMD           |Command code -- here “LEAD_SEND_IMM”=0x32                       |
    +-----+------------------+----------------------------------------------------------------+

.. _I2C micro-code__CMD_LEAD_SEND_IMM_ADDR:

CMD_LEAD_SEND_IMM_ADDR
""""""""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |Bit #|       Name       |                                                                  Description                                                                  |
    +=====+==================+===============================================================================================================================================+
    |7:0  |ADDR8             |Address LSBs: in 7-bit addressing, it is made of the 7 address bits + direction bit; in 10-bit adressing, it is the 8 LSBs of the address.     |
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |15:8 |ADDR16            |Address MSBs in 10-bit addressing: b11110 + address bits 9 and 8 + direction bit.                                                              |
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |15   |ADDRESS_MODE      |If 0, send 7-bit address (i.e. send ADDR8 byte only); if 1, send 10-bit address (i.e. ADDR16 as the first byte, then ADDR8 as the second byte).|
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |22   |TWEAK_IGNORE_NACK |If 1, ignore NACK error: it will not trigger an event nor a lock                                                                               |
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |23   |TWEAK_STOP_ON_NACK|If 1, on NACK automatically send a stop                                                                                                        |
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
    |31:24|I2C_CMD           |Command code -- here “LEAD_SEND_IMM_ADDR”=0x37                                                                                                 |
    +-----+------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+

.. _I2C micro-code__CMD_LEAD_RECV:

CMD_LEAD_RECV
"""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+-------------------------------------+
    |Bit #| Name  |             Description             |
    +=====+=======+=====================================+
    |31:24|I2C_CMD|Command code -- here “LEAD_RECV”=0x33|
    +-----+-------+-------------------------------------+

.. _I2C micro-code__CMD_LEAD_RECV_LAST:

CMD_LEAD_RECV_LAST
""""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+------------------------------------------+
    |Bit #| Name  |               Description                |
    +=====+=======+==========================================+
    |31:24|I2C_CMD|Command code -- here “LEAD_RECV_LAST”=0x34|
    +-----+-------+------------------------------------------+

.. _I2C micro-code__CMD_LEAD_STOP:

CMD_LEAD_STOP
"""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+-------------------------------------+
    |Bit #| Name  |             Description             |
    +=====+=======+=====================================+
    |31:24|I2C_CMD|Command code -- here “LEAD_STOP”=0x36|
    +-----+-------+-------------------------------------+

.. _I2C micro-code__CMD_EVENT_RECV:

CMD_EVENT_RECV
""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+---------+--------------------------------------+
    |Bit #|  Name   |             Description              |
    +=====+=========+======================================+
    |1:0  |EVENT_IDX|Index of expected external event      |
    +-----+---------+--------------------------------------+
    |31:24|I2C_CMD  |Command code -- here “EVENT_RECV”=0x40|
    +-----+---------+--------------------------------------+

.. _I2C micro-code__CMD_EVENT_SEND:

CMD_EVENT_SEND
""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------+--------------------------------------+
    |Bit #| Name  |             Description              |
    +=====+=======+======================================+
    |31:24|I2C_CMD|Command code -- here “EVENT_SEND”=0x41|
    +-----+-------+--------------------------------------+

.. _I2C micro-code__CMD_UDMA_TX_CHAN_CFG:

CMD_UDMA_TX_CHAN_CFG
""""""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------------+------------------------------------------------------------------------------+
    |Bit #|    Name     |                                 Description                                  |
    +=====+=============+==============================================================================+
    |1:0  |TX_REG_SELECT|TX register address to set. Configuration data is taken in the following word.|
    +-----+-------------+------------------------------------------------------------------------------+
    |31:24|I2C_CMD      |Command code -- here “UDMA_TX_CHAN_CFG”=0x50                                  |
    +-----+-------------+------------------------------------------------------------------------------+

.. _I2C micro-code__CMD_UDMA_RX_CHAN_CFG:

CMD_UDMA_RX_CHAN_CFG
""""""""""""""""""""

.. table:: 
    :align: center
    :widths: 15 45 90

    +-----+-------------+------------------------------------------------------------------------------+
    |Bit #|    Name     |                                 Description                                  |
    +=====+=============+==============================================================================+
    |1:0  |RX_REG_SELECT|RX register address to set. Configuration data is taken in the following word.|
    +-----+-------------+------------------------------------------------------------------------------+
    |31:24|I2C_CMD      |Command code -- here “UDMA_RX_CHAN_CFG”=0x51                                  |
    +-----+-------------+------------------------------------------------------------------------------+
