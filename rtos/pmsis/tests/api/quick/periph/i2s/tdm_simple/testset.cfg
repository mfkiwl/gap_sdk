from plptest import *


# Called by plptest to declare the tests
def get_tests(config):

    test_duration = config.get('test_duration')

    #
    # Test list decription
    #
    Sdk_test(config, 'tdm_simple:max_pad_frequency', check='check',
        flags='NB_SLOTS=8 RX_SLOTS=0x000F TX_SLOTS=0x000F SAMPLING_FREQ_0=192000'
        ' SAMPLING_FREQ_1=192000 SAMPLING_FREQ_2=192000 WORD_SIZE=32 ITFS=7 FULL_DUPLEX=1'
        ' TEST_DURATION=%s' % test_duration,
    )

    Sdk_test(config, 'tdm_simple:full_duplex_all_slots_16b_i2s0',
        flags='TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF FULL_DUPLEX=1 ITFS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_all_i2s',
        flags='TX_SLOTS=0x5555 RX_SLOTS=0xAAAA FULL_DUPLEX=1 ITFS=7 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_all_i2s_mem_slabs',
        flags='TX_SLOTS=0x5555 RX_SLOTS=0xAAAA FULL_DUPLEX=1 ITFS=7 TX_SLABS=0x20406 RX_SLABS=0x204060'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_frames',
        flags='RX_FRAMES=0x3F00003F TX_FRAMES=0xF30000F3 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF'
        ' FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_frames_slabs',
        flags='TX_SLOTS=0x5555 RX_SLOTS=0xAAAA RX_FRAMES=0xA000000A TX_FRAMES=0x05000050'
        ' TX_SLABS=0x60604040000 RX_SLABS=0x60000000000040 FULL_DUPLEX=1'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_all_formats',
        flags='RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606'
        ' RX_SLOTS_WIDTH_1=0x0F09010407080A0B TX_SLOTS_FORMAT=0x0517236476543210'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x01030507090B0D0F'
        ' TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16 FULL_DUPLEX=1 NB_SAMPLE=256'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_all_formats_1slot',
        flags='RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606'
        ' RX_SLOTS_WIDTH_1=0x0F09010407080A0B TX_SLOTS_FORMAT=0x0517236476543210'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x01030507090B0D0F'
        ' TX_SLOTS=0x1 RX_SLOTS=0x1 NB_SLOTS=1 FULL_DUPLEX=1 NB_SAMPLE=256'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_all_formats_2slots',
        flags='RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606'
        ' RX_SLOTS_WIDTH_1=0x0F09010407080A0B TX_SLOTS_FORMAT=0x0517236476543210'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x01030507090B0D0F'
        ' TX_SLOTS=0x3 RX_SLOTS=0x3 NB_SLOTS=2 FULL_DUPLEX=1 NB_SAMPLE=256'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b',
        flags='TX_SLOTS=0xAA RX_SLOTS=0x55 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b_clk_pol1',
        flags='TX_SLOTS=0xAAAA RX_SLOTS=0x5555 CLK_POLS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b_ext_clk',
        flags='TX_SLOTS=0xAAAA RX_SLOTS=0x5555 EXT_CLKS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b_ext_int_clk',
        flags='TX_SLOTS=0xAAAA RX_SLOTS=0x5555 ITFS=3 EXT_CLKS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_3state_16b_ext_int_clk',
        flags='TX_SLOTS=0x1111 RX_SLOTS=0x4444 ITFS=3 EXT_CLKS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b_ext_clk_ext_ws',
        flags='TX_SLOTS=0xAAAA RX_SLOTS=0x5555 EXT_CLKS=1 EXT_WSS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:half_duplex_tx_rx_16b_ext_ws',
        flags='TX_SLOTS=0xAAAA RX_SLOTS=0x5555 EXT_WSS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_clk_int_routed_all_i2s',
        flags='TX_SLOTS=0x5555 RX_SLOTS=0xAAAA FULL_DUPLEX=1 ITFS=7 SAI0_CLKS=6 SAI0_WSS=6'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_rx_16b_clk_int_routed_all_i2s',
        flags='TX_SLOTS=0x0 RX_SLOTS=0xFFFF FULL_DUPLEX=1 ITFS=7 SAI0_CLKS=6 SAI0_WSS=6'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_16b_clk_int_routed_all_i2s',
        flags='TX_SLOTS=0xFFFF RX_SLOTS=0      FULL_DUPLEX=1 ITFS=7 SAI0_CLKS=6 SAI0_WSS=6'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_clk_int_routed_all_i2s_ext_clk',
        flags='TX_SLOTS=0x5555 RX_SLOTS=0xAAAA FULL_DUPLEX=1 ITFS=7 SAI0_CLKS=6 SAI0_WSS=6'
        ' EXT_CLKS=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_4_slots_16b_i2s0_5mhz_ref_clk',
        flags='NB_SLOTS=4 TX_SLOTS=0xF RX_SLOTS=0xF FULL_DUPLEX=1 ITFS=1 USE_FAST_CLK=7'
        ' FAST_CLK_FREQ=5000000 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:mute_unmute',
        flags='MUTE=0x5555 NB_SAMPLE=256 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF FULL_DUPLEX=1'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:errors',
        flags='INJECT_STALL=1 NB_ITER=4 RX_SLOTS=0x4912 FULL_DUPLEX=1 TX_SLOTS=0x6182'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:sampling_freq_fll',
        flags='ITFS=7 SAMPLING_FREQ_0=48000 SAMPLING_FREQ_1=22050 SAMPLING_FREQ_2=11025'
        ' RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606'
        ' RX_SLOTS_WIDTH_1=0x0F09010407080A0B TX_SLOTS_FORMAT=0x0517236476543210'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x01030507090B0D0F'
        ' TX_SLOTS=0xA55A RX_SLOTS=0x5AA5 NB_SLOTS=16 FULL_DUPLEX=1 NB_SAMPLE=256'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:sampling_freq_fast_clk',
        flags='USE_FAST_CLK=7 ITFS=7 SAMPLING_FREQ_0=48000 SAMPLING_FREQ_1=22050'
        ' SAMPLING_FREQ_2=11025 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F09010407080A0B'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x01030507090B0D0F TX_SLOTS=0xA55A RX_SLOTS=0x5AA5 NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass',
        flags='RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF TX_SLOTS_BYPASS=0xed9b'
        ' FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_ext_clk',
        flags='EXT_CLKS=1 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_ext_ws',
        flags='EXT_WSS=1 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_ext_clk_ext_ws',
        flags='EXT_CLKS=1 EXT_WSS=1 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_fast_clk',
        flags='USE_FAST_CLK=7 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_fast_clk_1slot',
        flags='USE_FAST_CLK=7 RX_SLOTS=0x1 RX_SLOTS_BYPASS=0x0 TX_SLOTS=0x1 TX_SLOTS_BYPASS=0x1'
        ' NB_SLOTS=1 FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_fast_clk_2slot',
        flags='USE_FAST_CLK=7 RX_SLOTS=0x3 RX_SLOTS_BYPASS=0x2 TX_SLOTS=0x3 TX_SLOTS_BYPASS=0x3'
        ' NB_SLOTS=2 FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_fast_clk_8b',
        flags='WORD_SIZE=8 RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707'
        ' ELEM_SIZE=1 TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' USE_FAST_CLK=7 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:bypass_fast_clk_32b',
        flags='WORD_SIZE=32 RX_SLOTS_WIDTH_0=0x1f1f1f1f1f1f1f1f RX_SLOTS_WIDTH_1=0x1f1f1f1f1f1f1f1f'
        ' ELEM_SIZE=4 TX_SLOTS_WIDTH_0=0x1f1f1f1f1f1f1f1f TX_SLOTS_WIDTH_1=0x1f1f1f1f1f1f1f1f'
        ' USE_FAST_CLK=7 RX_SLOTS=0xFFFF RX_SLOTS_BYPASS=0xc9b6 TX_SLOTS=0xeFFF'
        ' TX_SLOTS_BYPASS=0xed9b FULL_DUPLEX=1 TEST_DURATION=%s' % test_duration
    )


    # WS delay tests are using 8bits samples to make sure they exercise all the bits to look for potential issues on MSB and LSB
    Sdk_test(config, 'tdm_simple:ws_delay_5_int_clk_int_ws',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=5 FULL_DUPLEX=1 WORD_SIZE=8'
        ' RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707 ELEM_SIZE=1'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:ws_delay_0_int_clk_int_ws',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=0 FULL_DUPLEX=1 WORD_SIZE=8'
        ' RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707 ELEM_SIZE=1'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:ws_delay_0_int_clk_ext_ws',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=0 EXT_WSS=1 FULL_DUPLEX=1 WORD_SIZE=8'
        ' RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707 ELEM_SIZE=1'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:ws_delay_0_ext_clk_int_ws',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=0 EXT_CLKS=1 FULL_DUPLEX=1 WORD_SIZE=8'
        ' RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707 ELEM_SIZE=1'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:ws_delay_0_ext_clk_ext_ws',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=0 EXT_CLKS=1 EXT_WSS=1 FULL_DUPLEX=1'
        ' WORD_SIZE=8 RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707'
        ' ELEM_SIZE=1 TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:ws_delay_0_fast_clk',
        flags='RX_SLOTS=0xFFFF TX_SLOTS=0xFFFF WS_DELAYS=0 USE_FAST_CLK=1 FULL_DUPLEX=1 WORD_SIZE=8'
        ' RX_SLOTS_WIDTH_0=0x0707070707070707 RX_SLOTS_WIDTH_1=0x0707070707070707 ELEM_SIZE=1'
        ' TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0707070707070707'
        ' TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_8b_8b_all_formats',
        flags='USE_FAST_CLK=7 WORD_SIZE=8 ELEM_SIZE=1 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0701010407000203'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x0103050701030507 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_8b_16b_all_formats',
        flags='USE_FAST_CLK=7 WORD_SIZE=8 ELEM_SIZE=2 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0701010407000203'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x0103050701030507 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_8b_32b_all_formats',
        flags='EXT_CLKS=1 EXT_WSS=1 WORD_SIZE=8 ELEM_SIZE=4 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0701010407000203'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x0103050701030507 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_16b_32b_all_formats',
        flags='EXT_CLKS=1 EXT_WSS=1 WORD_SIZE=16 ELEM_SIZE=4 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F09010407080A0B'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x01030507090B0D0F TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    # TODO does not work
    #Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_24b_24b_all_formats', flags='EXT_CLKS=1 WORD_SIZE=24 ELEM_SIZE=3 RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F13011407110A15 TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0113050709121317 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF all NB_SLOTS=16 FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration)

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_24b_32b_all_formats',
        flags='WORD_SIZE=24 ELEM_SIZE=4 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F13011407110A15'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x0113050709121317 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF NB_SLOTS=16'
        ' FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    Sdk_test(config, 'tdm_simple:full_duplex_tx_rx_32b_all_formats',
        flags='WORD_SIZE=32 ELEM_SIZE=4 RX_SLOTS_FORMAT=0x0731546201234567'
        ' RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F19011407180A1B'
        ' TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707'
        ' TX_SLOTS_WIDTH_1=0x11031507091B1D1F TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF'
        ' NB_SLOTS=16 FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
    )

    if config.get('platform') != 'gvsoc':
        Sdk_test(config, 'tdm_simple:i2s_fast_clk',
            flags='USE_FAST_CLK=7 ITFS=7 I2S_FAST_CLOCK=1 SAI0_CLKS=4 TX_SLOTS=0x5555'
            ' RX_SLOTS=0xAAAA FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration
        )


    #
    # Test plan
    #
    config.get_test('tdm_simple:max_pad_frequency').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of all interfaces in full duplex with maximum frequency on pads.',
            category='udma:i2s',
            features=['RX and TX TDM full duplex']))

    config.get_test('tdm_simple:full_duplex_all_slots_16b_i2s0').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex.',
            category='udma:i2s',
            features=['RX and TX TDM full duplex']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_all_i2s').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of all interfaces in full duplex.',
            category='udma:i2s',
            features=['RX and TX TDM full duplex']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_all_i2s_mem_slabs').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of all interfaces in full duplex using memory slabs.',
            category='udma:i2s',
            features=['Memory slab allocators']))

    config.get_test('tdm_simple:full_duplex_tx_rx_frames').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots in full duplex using frames.',
            category='udma:i2s',
            features=['Channel frames']))

    config.get_test('tdm_simple:full_duplex_tx_rx_frames_slabs').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots in full duplex using frames and memory slabs.',
            category='udma:i2s',
            features=['Channel frames']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_all_formats').add_testcase(
        Testcase(
            description='Check all formats on I2S TX and RX on all slots of interface 0 in full duplex.',
            category='udma:i2s',
            features=['All formats']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_all_formats_1slot').add_testcase(
        Testcase(
            description='Check all formats on I2S TX and RX on 1 slot of interface 0 in full duplex.',
            category='udma:i2s',
            features=['All formats']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_all_formats_2slots').add_testcase(
        Testcase(
            description='Check all formars of I2S TX and RX on 2 slots of interface 0 in full duplex.',
            category='udma:i2s',
            features=['All formats']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in half duplex.',
            category='udma:i2s',
            features=['RX and TX TDM half duplex']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b_clk_pol1').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in half duplex with clock polarity 1.',
            category='udma:i2s',
            features=['Clock polarity']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b_ext_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in half duplex with external clock.',
            category='udma:i2s',
            features=['External clock']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b_ext_int_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with external clock and interface 1 with internal clock in half duplex.',
            category='udma:i2s',
            features=['External clock']))

    config.get_test('tdm_simple:half_duplex_tx_rx_3state_16b_ext_int_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on partial slots with slots in high impedance of interface 0 with external clock and interface 1 with internal clock in half duplex.',
            category='udma:i2s',
            features=['3 states']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b_ext_clk_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with external clock and WS in half duplex.',
            category='udma:i2s',
            features=['External clock', 'External WS']))

    config.get_test('tdm_simple:half_duplex_tx_rx_16b_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with internal clock and WS in half duplex.',
            category='udma:i2s',
            features=['External WS']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_clk_int_routed_all_i2s').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots on all interfaces in full duplex with clock and WS propagation from interface 0.',
            category='udma:i2s',
            features=['SAI0 clock propagation', 'SAI0 WS propagation']))

    config.get_test('tdm_simple:full_duplex_rx_16b_clk_int_routed_all_i2s').add_testcase(
        Testcase(
            description='Check I2S RX on all slots on all interfaces in full duplex with clock and WS propagation from interface 0.',
            category='udma:i2s',
            features=['SAI0 clock propagation', 'SAI0 WS propagation']))

    config.get_test('tdm_simple:full_duplex_tx_16b_clk_int_routed_all_i2s').add_testcase(
        Testcase(
            description='Check I2S TX on all slots on all interfaces in full duplex with clock and WS propagation from interface 0.',
            category='udma:i2s',
            features=['SAI0 clock propagation', 'SAI0 WS propagation']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_clk_int_routed_all_i2s_ext_clk').add_testcase(
        Testcase(
            description='Check I2S TX on all slots on all interfaces in full duplex with clock and WS propagation from interface 0 with external clock.',
            category='udma:i2s',
            features=['SAI0 clock propagation', 'SAI0 WS propagation', 'External clock']))

    config.get_test('tdm_simple:full_duplex_4_slots_16b_i2s0_5mhz_ref_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with fast clock.',
            category='udma:i2s',
            features=['Fast clock']))

    config.get_test('tdm_simple:mute_unmute').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex while doing mute and unmute.',
            category='udma:i2s',
            features=['Mute / ummute']))

    config.get_test('tdm_simple:errors').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex while injecting errors.',
            category='udma:i2s',
            features=['Error handling']))

    config.get_test('tdm_simple:sampling_freq_fll').add_testcase(
        Testcase(
            description='Check all formats of I2S TX and RX on all slots on all interfaces in full duplex with FLL clock at various sampling frequency.',
            category='udma:i2s',
            features=['FLL clock']))

    config.get_test('tdm_simple:sampling_freq_fast_clk').add_testcase(
        Testcase(
            description='Check all formats of I2S TX and RX on all slots on all interfaces in full duplex with fast clock clock at various sampling frequency.',
            category='udma:i2s',
            features=['Fast clock']))

    config.get_test('tdm_simple:bypass').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with TX bypass.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_ext_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with TX bypass with external clock.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with TX bypass with external WS.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_ext_clk_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with TX bypass with external clock and WS.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_fast_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 with TX bypass with fast clock.', 
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_fast_clk_1slot').add_testcase(
        Testcase(
            description='Check I2S TX and RX on 1 slot of interface 0 with TX bypass with fast clock.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_fast_clk_2slot').add_testcase(
        Testcase(
            description='Check I2S TX and RX on 2 slots of interface 0 with TX bypass with fast clock.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_fast_clk_8b').add_testcase(
        Testcase(
            description='Check I2S TX and RX on 2 slots of interface 0 with TX bypass with fast clock in 8bits format.',
            category='udma:i2s',
            features=['Bypass']))

    config.get_test('tdm_simple:bypass_fast_clk_32b').add_testcase(
        Testcase(
            description='Check I2S TX and RX on 2 slots of interface 0 with TX bypass with fast clock in 32bits format.',
            category='udma:i2s',
            features=['Bypass']))

    # WS delay tests are using 8bits samples to make sure they exercise all the bits to look for potential issues on MSB and LSB
    config.get_test('tdm_simple:ws_delay_5_int_clk_int_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with WS delay 5.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:ws_delay_0_int_clk_int_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with WS delay 0.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:ws_delay_0_int_clk_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with external WS and WS delay 0.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:ws_delay_0_ext_clk_int_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with external clock and WS delay 0.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:ws_delay_0_ext_clk_ext_ws').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with external clock and WS and WS delay 0.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:ws_delay_0_fast_clk').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with fast clock and WS delay 0.',
            category='udma:i2s',
            features=['WS delay']))

    config.get_test('tdm_simple:full_duplex_tx_rx_8b_8b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with fast clock in 8bits i2s and 8bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    config.get_test('tdm_simple:full_duplex_tx_rx_8b_16b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with fast clock in 8bits i2s and 16bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    config.get_test('tdm_simple:full_duplex_tx_rx_8b_32b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with external clock and WS in 8bits i2s and 32bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    config.get_test('tdm_simple:full_duplex_tx_rx_16b_32b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex with external clock and WS in 16bits i2s and 32bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    # TODO does not work
    #append_test(tests, get_test('full_duplex_tx_rx_24b_24b_all_formats',                'EXT_CLKS=1 WORD_SIZE=24 ELEM_SIZE=3 RX_SLOTS_FORMAT=0x0731546201234567 RX_SLOTS_WIDTH_0=0x0606060606060606 RX_SLOTS_WIDTH_1=0x0F13011407110A15 TX_SLOTS_FORMAT=0x0517236476543210 TX_SLOTS_WIDTH_0=0x0707070707070707 TX_SLOTS_WIDTH_1=0x0113050709121317 TX_SLOTS=0xFFFF RX_SLOTS=0xFFFF all NB_SLOTS=16 FULL_DUPLEX=1 NB_SAMPLE=256 TEST_DURATION=%s' % test_duration), level=10)

    config.get_test('tdm_simple:full_duplex_tx_rx_24b_32b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex in 24bits i2s and 32bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    config.get_test('tdm_simple:full_duplex_tx_rx_32b_all_formats').add_testcase(
        Testcase(
            description='Check I2S TX and RX on all slots of interface 0 in full duplex in 32bits i2s and 32bits memory format.',
            category='udma:i2s',
            features=['Sample width']))

    if config.get('platform') != 'gvsoc':
        config.get_test('tdm_simple:i2s_fast_clk').add_testcase(
            Testcase(
                description='Check I2S TX and RX on all slots of all interfaces in full duplex with external clock in bypass mode on special pad.',
                category='udma:i2s',
                features=['External bypassed clock']))

    #
    # Test skipping
    #
    if config.get('os') == 'freertos':
        config.get_test('tdm_simple:max_pad_frequency').skip_test("No yet supported on FreeRTOS")

    if config.get('platform') in ['board', 'fpga']:
        for test in config.get_tests():
            test.skip("No yet supported on board and fpga")
