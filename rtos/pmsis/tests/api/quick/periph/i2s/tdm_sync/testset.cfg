from plptest import *


# Called by plptest to declare the tests
def get_tests(config):

    test_duration = config.get('test_duration')

    #
    # Test list decription
    #
    Sdk_test(config, 'tdm_sync:global_en', check='check',
        flags='USE_GLOBAL_ENABLE=1 TEST_DURATION=%s' % test_duration,
    )

    Sdk_test(config, 'tdm_sync:slot_en', check='check',
        flags='TEST_DURATION=%s' % test_duration,
    )

    #
    # Test plan
    #
    config.get_test('tdm_sync:global_en').add_testcase(
        Testcase(
            description='Check I2S RX and TX on all slots of all interfaces with global enable/disable and cross-interface synchronization.',
            category='udma:i2s',
            features=['Cross-interface synchronization']))

    config.get_test('tdm_sync:slot_en').add_testcase(
        Testcase(
            description='Check I2S RX and TX on all slots of all interfaces with slot mute/unmute and cross-interface synchronization.',
            category='udma:i2s',
            features=['Cross-interface synchronization']))

    #
    # Test skipping
    #
    if config.get('platform') in ['board', 'fpga']:
        for test in config.get_tests():
            test.skip("No yet supported on board and fpga")
