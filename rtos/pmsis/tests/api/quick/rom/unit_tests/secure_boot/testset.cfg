from plptest import *
import os

TestConfig = c = {}

# Called by plptest to declare the tests
def get_tests(config):

    duration = int(config.get('duration'))

    #
    # Test list decription
    #
    Sdk_test(config, 'secure_boot:qk', flags='USE_QK=1 USE_CRC=0')
    Sdk_test(config, 'secure_boot:user', flags='USE_QK=0 USE_CRC=0')
    Sdk_test(config, 'secure_boot:qk_disable', flags='USE_QK=1 QK_LOCK=1')
    Sdk_test(config, 'secure_boot:itf1', flags='USE_ITF1=1')
    Sdk_test(config, 'secure_boot:xip', flags='USE_XIP=1')

    if duration > 50:
        Sdk_test(config, 'secure_boot:user_crc', flags='USE_QK=0 USE_CRC=1')
        Sdk_test(config, 'secure_boot:qk_crc', flags='USE_QK=1 USE_CRC=1')
        Sdk_test(config, 'secure_boot:user_crc_sign_only', flags='USE_QK=0 USE_CRC=1 SIGN_ONLY=1')


    #
    # Test skipping
    #
    if config.get('platform') == 'gvsoc':
        for test in config.get_tests():
            test.skip("No yet supported on GVSOC")
