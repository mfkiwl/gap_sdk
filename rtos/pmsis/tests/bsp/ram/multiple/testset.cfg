from plptest import *

# Called by plptest to declare the tests
def get_tests(config):

    #
    # Test list description
    #
    
    # default flash is validated only on boards having default flash support, i.e only gap9 for now
    # and not gap9_v2 board since it only checks dedicated flashs
    if config.get('board') != 'gap9_v2':

        Sdk_test(config, 'multiple:default:sync_read_2d', flags='QUICK=1 READ=1 SYNC_2D=1')

        if int(config.get('duration')) >= 50:

            Sdk_test(config, 'multiple:default:sync_read'     , flags='QUICK=1 READ=1 SYNC=1')
            Sdk_test(config, 'multiple:default:sync_write'    , flags='QUICK=1 WRITE=1 SYNC=1')
            Sdk_test(config, 'multiple:default:sync_write_2d' , flags='QUICK=1 WRITE=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:async_read'    , flags='QUICK=1 READ=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:async_write'   , flags='QUICK=1 WRITE=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:async_read_2d' , flags='QUICK=1 READ=1 ASYNC_2D=1')
            Sdk_test(config, 'multiple:default:async_write_2d', flags='QUICK=1 WRITE=1 ASYNC_2D=1')

            Sdk_test(config, 'multiple:default:cluster_sync_read'     , flags='USE_CLUSTER=1 QUICK=1 READ=1 SYNC=1')
            Sdk_test(config, 'multiple:default:cluster_sync_write'    , flags='USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC=1')
            Sdk_test(config, 'multiple:default:cluster_sync_read_2d'  , flags='USE_CLUSTER=1 QUICK=1 READ=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:cluster_sync_write_2d' , flags='USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:cluster_async_read'    , flags='USE_CLUSTER=1 QUICK=1 READ=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:cluster_async_write'   , flags='USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:cluster_async_read_2d' , flags='USE_CLUSTER=1 QUICK=1 READ=1 ASYNC_2D=1')
            Sdk_test(config, 'multiple:default:cluster_async_write_2d', flags='USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC_2D=1')

        if int(config.get('duration')) >= 100:

            Sdk_test(config, 'multiple:default:robust_sync_read'     , flags='ROBUST=1 READ=1 SYNC=1')
            Sdk_test(config, 'multiple:default:robust_sync_read_2d'  , flags='ROBUST=1 READ=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_sync_write'    , flags='ROBUST=1 WRITE=1 SYNC=1')
            Sdk_test(config, 'multiple:default:robust_sync_write_2d' , flags='ROBUST=1 WRITE=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_async_read'    , flags='ROBUST=1 READ=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:robust_async_write'   , flags='ROBUST=1 WRITE=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:robust_async_read_2d' , flags='ROBUST=1 READ=1 ASYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_async_write_2d', flags='ROBUST=1 WRITE=1 ASYNC_2D=1')

            Sdk_test(config, 'multiple:default:robust_cluster_sync_read'     , flags='USE_CLUSTER=1 ROBUST=1 READ=1 SYNC=1')
            Sdk_test(config, 'multiple:default:robust_cluster_sync_write'    , flags='USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC=1')
            Sdk_test(config, 'multiple:default:robust_cluster_sync_read_2d'  , flags='USE_CLUSTER=1 ROBUST=1 READ=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_cluster_sync_write_2d' , flags='USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_cluster_async_read'    , flags='USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:robust_cluster_async_write'   , flags='USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC=1')
            Sdk_test(config, 'multiple:default:robust_cluster_async_read_2d' , flags='USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC_2D=1')
            Sdk_test(config, 'multiple:default:robust_cluster_async_write_2d', flags='USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC_2D=1')


    Sdk_test(config, 'multiple:hyper:sync_read_2d', flags='RAM_TYPE=HYPERRAM QUICK=1 READ=1 SYNC_2D=1')

    if int(config.get('duration')) >= 50:

        Sdk_test(config, 'multiple:hyper:sync_read'     , flags='RAM_TYPE=HYPERRAM QUICK=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:sync_write'    , flags='RAM_TYPE=HYPERRAM QUICK=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:sync_write_2d' , flags='RAM_TYPE=HYPERRAM QUICK=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:async_read'    , flags='RAM_TYPE=HYPERRAM QUICK=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:async_write'   , flags='RAM_TYPE=HYPERRAM QUICK=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:async_read_2d' , flags='RAM_TYPE=HYPERRAM QUICK=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:async_write_2d', flags='RAM_TYPE=HYPERRAM QUICK=1 WRITE=1 ASYNC_2D=1')

        Sdk_test(config, 'multiple:hyper:cluster_sync_read'     , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:cluster_sync_write'    , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:cluster_sync_read_2d'  , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:cluster_sync_write_2d' , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:cluster_async_read'    , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:cluster_async_write'   , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:cluster_async_read_2d' , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:cluster_async_write_2d', flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC_2D=1')

    if int(config.get('duration')) >= 100:

        Sdk_test(config, 'multiple:hyper:robust_sync_read'     , flags='RAM_TYPE=HYPERRAM ROBUST=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_sync_read_2d'  , flags='RAM_TYPE=HYPERRAM ROBUST=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_sync_write'    , flags='RAM_TYPE=HYPERRAM ROBUST=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_sync_write_2d' , flags='RAM_TYPE=HYPERRAM ROBUST=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_async_read'    , flags='RAM_TYPE=HYPERRAM ROBUST=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_async_write'   , flags='RAM_TYPE=HYPERRAM ROBUST=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_async_read_2d' , flags='RAM_TYPE=HYPERRAM ROBUST=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_async_write_2d', flags='RAM_TYPE=HYPERRAM ROBUST=1 WRITE=1 ASYNC_2D=1')

        Sdk_test(config, 'multiple:hyper:robust_cluster_sync_read'     , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_sync_write'    , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_sync_read_2d'  , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_sync_write_2d' , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_async_read'    , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_async_write'   , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_async_read_2d' , flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:hyper:robust_cluster_async_write_2d', flags='RAM_TYPE=HYPERRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC_2D=1')


    if int(config.get('duration')) >= 50:

        Sdk_test(config, 'multiple:spi:sync_read'     , flags='RAM_TYPE=SPIRAM QUICK=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:sync_write'    , flags='RAM_TYPE=SPIRAM QUICK=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:sync_write_2d' , flags='RAM_TYPE=SPIRAM QUICK=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:async_read'    , flags='RAM_TYPE=SPIRAM QUICK=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:async_write'   , flags='RAM_TYPE=SPIRAM QUICK=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:async_read_2d' , flags='RAM_TYPE=SPIRAM QUICK=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:spi:async_write_2d', flags='RAM_TYPE=SPIRAM QUICK=1 WRITE=1 ASYNC_2D=1')

        Sdk_test(config, 'multiple:spi:cluster_sync_read'     , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:cluster_sync_write'    , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:cluster_sync_read_2d'  , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:cluster_sync_write_2d' , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:cluster_async_read'    , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:cluster_async_write'   , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:cluster_async_read_2d' , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:spi:cluster_async_write_2d', flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC_2D=1')

    if int(config.get('duration')) >= 100:

        Sdk_test(config, 'multiple:spi:robust_sync_read'     , flags='RAM_TYPE=SPIRAM ROBUST=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:robust_sync_read_2d'  , flags='RAM_TYPE=SPIRAM ROBUST=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_sync_write'    , flags='RAM_TYPE=SPIRAM ROBUST=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:robust_sync_write_2d' , flags='RAM_TYPE=SPIRAM ROBUST=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_async_read'    , flags='RAM_TYPE=SPIRAM ROBUST=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:robust_async_write'   , flags='RAM_TYPE=SPIRAM ROBUST=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:robust_async_read_2d' , flags='RAM_TYPE=SPIRAM ROBUST=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_async_write_2d', flags='RAM_TYPE=SPIRAM ROBUST=1 WRITE=1 ASYNC_2D=1')

        Sdk_test(config, 'multiple:spi:robust_cluster_sync_read'     , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 READ=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_sync_write'    , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_sync_read_2d'  , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 READ=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_sync_write_2d' , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 SYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_async_read'    , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_async_write'   , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_async_read_2d' , flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 READ=1 ASYNC_2D=1')
        Sdk_test(config, 'multiple:spi:robust_cluster_async_write_2d', flags='RAM_TYPE=SPIRAM USE_CLUSTER=1 ROBUST=1 WRITE=1 ASYNC_2D=1')

    #
    # Test skipping
    #
    if config.get('platform') == 'gvsoc':
        for test in config.get_tests():
            if test.name.find('multiple:spi:') == 0:
                test.skip("No yet supported on GVSOC")

    #
    # Testsuites selection from tags
    #
    config.get_test('multiple:default:sync_read_2d').add_tags(['gap9_evk_testsuite'])
    config.get_test('multiple:default:sync_write_2d').add_tags(['gap9_evk_testsuite'])
    config.get_test('multiple:default:robust_sync_read_2d').add_tags(['gap9_evk_testsuite'])
    config.get_test('multiple:default:robust_sync_write_2d').add_tags(['gap9_evk_testsuite'])
