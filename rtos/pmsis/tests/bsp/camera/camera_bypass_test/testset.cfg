from plptest import *


# Called by plptest to declare the tests
def get_tests(config):

    #
    # Test list decription
    #

    Sdk_test(config, 'camera_bypass:1byte', flags='test=1 pixel=1')
    Sdk_test(config, 'camera_bypass:2byte', flags='test=1 pixel=2')
    Sdk_test(config, 'camera_bypass:1byte_slice', flags='test=1 pixel=1 slice=1')
    Sdk_test(config, 'camera_bypass:2byte_slice', flags='test=1 pixel=2 slice=1')

    Sdk_test(config, 'camera_bypass:1byte_v0h0', flags='test=1 pixel=1 vpol=0 hpol=0')
    Sdk_test(config, 'camera_bypass:1byte_v1h0', flags='test=1 pixel=1 vpol=1 hpol=0')
    Sdk_test(config, 'camera_bypass:1byte_v0h1', flags='test=1 pixel=1 vpol=0 hpol=1')

    Sdk_test(config, 'camera_bypass:2byte_v0h0', flags='test=1 pixel=2 vpol=0 hpol=0')
    Sdk_test(config, 'camera_bypass:2byte_v1h0', flags='test=1 pixel=2 vpol=1 hpol=0')
    Sdk_test(config, 'camera_bypass:2byte_v0h1', flags='test=1 pixel=2 vpol=0 hpol=1')

    Sdk_test(config, 'camera_bypass:1byte_slice_v0h0', flags='test=1 pixel=1 slice=1 vpol=0 hpol=0')
    Sdk_test(config, 'camera_bypass:2byte_slice_v0h0', flags='test=1 pixel=2 slice=1 vpol=0 hpol=0')


    #
    # Test skipping
    #
    if config.get('platform') == 'gvsoc':
        for test in config.get_tests():
            test.skip("No yet supported on GVSOC")
