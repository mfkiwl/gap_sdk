from plptest import *


# Called by plptest to declare the tests
def get_tests(config):

    duration = int(config.get('duration'))

    #
    # Test list decription
    #
    Sdk_test(config, 'camera_rgb:rgb565_rgb', flags='format=rgb565 seq=rgb')
    Sdk_test(config, 'camera_rgb:rgb555_rgb', flags='format=rgb555 seq=rgb')
    Sdk_test(config, 'camera_rgb:rgb444_rgb', flags='format=rgb444 seq=rgb')
    Sdk_test(config, 'camera_rgb:rgb888_rgb', flags='format=rgb888 seq=rgb')

    Sdk_test(config, 'camera_rgb:rgb565_rgb_slice', flags='format=rgb565 seq=rgb slice=1')
    Sdk_test(config, 'camera_rgb:rgb555_rgb_slice', flags='format=rgb555 seq=rgb slice=1')
    Sdk_test(config, 'camera_rgb:rgb444_rgb_slice', flags='format=rgb444 seq=rgb slice=1')
    Sdk_test(config, 'camera_rgb:rgb888_rgb_slice', flags='format=rgb888 seq=rgb slice=1')


    if duration > 50:
        Sdk_test(config, 'camera_rgb:rgb565_rbg', flags='format=rgb565 seq=rbg')
        Sdk_test(config, 'camera_rgb:rgb565_grb', flags='format=rgb565 seq=grb')
        Sdk_test(config, 'camera_rgb:rgb565_gbr', flags='format=rgb565 seq=gbr')
        Sdk_test(config, 'camera_rgb:rgb565_brg', flags='format=rgb565 seq=brg')
        Sdk_test(config, 'camera_rgb:rgb565_bgr', flags='format=rgb565 seq=bgr')

        Sdk_test(config, 'camera_rgb:rgb565_rbg_slice', flags='format=rgb565 seq=rbg slice=1')
        Sdk_test(config, 'camera_rgb:rgb565_grb_slice', flags='format=rgb565 seq=grb slice=1')
        Sdk_test(config, 'camera_rgb:rgb565_gbr_slice', flags='format=rgb565 seq=gbr slice=1')
        Sdk_test(config, 'camera_rgb:rgb565_brg_slice', flags='format=rgb565 seq=brg slice=1')
        Sdk_test(config, 'camera_rgb:rgb565_bgr_slice', flags='format=rgb565 seq=bgr slice=1')

        Sdk_test(config, 'camera_rgb:rgb555_rbg', flags='format=rgb555 seq=rbg')
        Sdk_test(config, 'camera_rgb:rgb555_grb', flags='format=rgb555 seq=grb')
        Sdk_test(config, 'camera_rgb:rgb555_gbr', flags='format=rgb555 seq=gbr')
        Sdk_test(config, 'camera_rgb:rgb555_brg', flags='format=rgb555 seq=brg')
        Sdk_test(config, 'camera_rgb:rgb555_bgr', flags='format=rgb555 seq=bgr')

        Sdk_test(config, 'camera_rgb:rgb555_rbg_slice', flags='format=rgb555 seq=rbg slice=1')
        Sdk_test(config, 'camera_rgb:rgb555_grb_slice', flags='format=rgb555 seq=grb slice=1')
        Sdk_test(config, 'camera_rgb:rgb555_gbr_slice', flags='format=rgb555 seq=gbr slice=1')
        Sdk_test(config, 'camera_rgb:rgb555_brg_slice', flags='format=rgb555 seq=brg slice=1')
        Sdk_test(config, 'camera_rgb:rgb555_bgr_slice', flags='format=rgb555 seq=bgr slice=1')

        Sdk_test(config, 'camera_rgb:rgb444_rbg', flags='format=rgb444 seq=rbg')
        Sdk_test(config, 'camera_rgb:rgb444_grb', flags='format=rgb444 seq=grb')
        Sdk_test(config, 'camera_rgb:rgb444_gbr', flags='format=rgb444 seq=gbr')
        Sdk_test(config, 'camera_rgb:rgb444_brg', flags='format=rgb444 seq=brg')
        Sdk_test(config, 'camera_rgb:rgb444_bgr', flags='format=rgb444 seq=bgr')

        Sdk_test(config, 'camera_rgb:rgb444_rbg_slice', flags='format=rgb444 seq=rbg slice=1')
        Sdk_test(config, 'camera_rgb:rgb444_grb_slice', flags='format=rgb444 seq=grb slice=1')
        Sdk_test(config, 'camera_rgb:rgb444_gbr_slice', flags='format=rgb444 seq=gbr slice=1')
        Sdk_test(config, 'camera_rgb:rgb444_brg_slice', flags='format=rgb444 seq=brg slice=1')
        Sdk_test(config, 'camera_rgb:rgb444_bgr_slice', flags='format=rgb444 seq=bgr slice=1')

        Sdk_test(config, 'camera_rgb:rgb888_rbg', flags='format=rgb888 seq=rbg')
        Sdk_test(config, 'camera_rgb:rgb888_grb', flags='format=rgb888 seq=grb')
        Sdk_test(config, 'camera_rgb:rgb888_gbr', flags='format=rgb888 seq=gbr')
        Sdk_test(config, 'camera_rgb:rgb888_brg', flags='format=rgb888 seq=brg')
        Sdk_test(config, 'camera_rgb:rgb888_bgr', flags='format=rgb888 seq=bgr')

        Sdk_test(config, 'camera_rgb:rgb888_rbg_slice', flags='format=rgb888 seq=rbg slice=1')
        Sdk_test(config, 'camera_rgb:rgb888_grb_slice', flags='format=rgb888 seq=grb slice=1')
        Sdk_test(config, 'camera_rgb:rgb888_gbr_slice', flags='format=rgb888 seq=gbr slice=1')
        Sdk_test(config, 'camera_rgb:rgb888_brg_slice', flags='format=rgb888 seq=brg slice=1')
        Sdk_test(config, 'camera_rgb:rgb888_bgr_slice', flags='format=rgb888 seq=bgr slice=1')

    #
    # Test skipping
    #
    if config.get('platform') == 'gvsoc':
        for test in config.get_tests():
            test.skip("No yet supported on GVSOC")
