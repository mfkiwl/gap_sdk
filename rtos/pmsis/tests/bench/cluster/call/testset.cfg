from plptest import *

def check_output(config, output):

    if output.find('Hello') == -1:
        return (False, "Didn't find output string")

    return (True, None)


# Called by plptest to declare the tests
def get_tests(config):

    #
    # Test list decription
    #
    Sdk_test(config, 'call:bench', flags='BENCH=1')

    if config.get('platform') == 'gvsoc' and config.get('os') == 'pulpos':
        Sdk_test(config, 'call:check', flags='CHECK=1')

    #
    # Scores
    #
    config.get_test('call:bench').scores += \
    [
        Score('cluster.task.send.fc_active_cycles_fc50_cl50'              , score='200.0 / value'),
        Score('cluster.task.send.cl_active_cycles_fc50_cl50'              , score='200.0 / value'),
        Score('cluster.task.send_async.fc_active_cycles_fc50_cl50'        , score='200.0 / value'),
        Score('cluster.task.send_async.cl_active_cycles_fc50_cl50'        , score='200.0 / value'),
        Score('cluster.task.send_callback.fc_active_cycles_fc50_cl50'     , score='200.0 / value'),
        Score('cluster.task.send_callback.cl_active_cycles_fc50_cl50'     , score='200.0 / value'),
        Score('cluster.task.send_irq.fc_active_cycles_fc50_cl50'          , score='200.0 / value'),
        Score('cluster.task.send_irq.cl_active_cycles_fc50_cl50'          , score='200.0 / value'),
        Score('cluster.task.enqueue.fc_active_cycles_fc50_cl50'           , score='200.0 / value'),
        Score('cluster.task.enqueue.cl_active_cycles_fc50_cl50'           , score='200.0 / value'),
        Score('cluster.task.enqueue_async.fc_active_cycles_fc50_cl50'     , score='200.0 / value'),
        Score('cluster.task.enqueue_async.cl_active_cycles_fc50_cl50'     , score='200.0 / value'),
        Score('cluster.task.enqueue_callback.fc_active_cycles_fc50_cl50'  , score='200.0 / value'),
        Score('cluster.task.enqueue_callback.cl_active_cycles_fc50_cl50'  , score='200.0 / value'),
        Score('cluster.task.enqueue_irq.fc_active_cycles_fc50_cl50'       , score='200.0 / value'),
        Score('cluster.task.enqueue_irq.cl_active_cycles_fc50_cl50'       , score='200.0 / value'),
        Score('cluster.task.tasklet.fc_active_cycles_fc50_cl50'           , score='90.0 / value'),
        Score('cluster.task.tasklet.cl_active_cycles_fc50_cl50'           , score='90.0 / value'),
    ]

    #
    # Testsuites selection from tags
    #
    config.get_test('call:bench').add_tags(['bench'])